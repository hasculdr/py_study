# -*- coding: utf-8 -*-
'''
Задание 12.2


Функция check_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона, например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список, где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список IP-адресов и/или диапазонов IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только последний октет адреса.

Функция возвращает список IP-адресов.


Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

'''
unformated_list = ['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

def convert_ranges_to_ip_list(unformated_list):
	formated_list = list()
	for elem in unformated_list:
		if '-' not in elem:
			formated_list.append(elem)
		else:
			temp_list = elem.split('-')
			begin_range = (temp_list[0].split('.'))[-1]
			end_range = (temp_list[-1].split('.'))[-1]
			for elem in range(int(begin_range), int(end_range)+1):
				formated_list.append(f'{(temp_list[0].split("."))[0]}.{(temp_list[0].split("."))[1]}.{(temp_list[0].split("."))[2]}.{elem}')
	return(formated_list)
if __name__ == "__main__":
	print(convert_ranges_to_ip_list(unformated_list))
